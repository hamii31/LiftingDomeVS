@using LiftingDome.Areas.Admin.Services.Interfaces;
@using LiftingDome.Infrastructure.Middleware;
@model AllUsersViewModel
@inject ICoachService CoachService
@inject IUserService UserService
@inject IAdministratorService AdminService
@{
	bool isUSerCoach = await CoachService.CoachExistsByEmailAsync(Model.Email);
}

<tr>
	<td><label>@Model.FirstName</label></td>
	<td><label>@Model.LastName</label></td>
	<td><label>@Model.Email</label></td>
	<td>
		@if (isUSerCoach)
		{
			<label>@await CoachService.GetCoachPhoneNumberByCoachIdAsync(Model.Id)</label>
		}
		else
		{
			<label>@Model.PhoneNumber</label>
		}
	</td>
	<td>
		@if (isUSerCoach)
		{
			<label>✔</label>
		}
		else
		{
			<label class="text-center">❌</label>
		}
	</td>
	<td>
		@if (isUSerCoach)
		{
			<label>Created Workouts: @await AdminService.TotalWorkoutsByCoachEmailAsync(Model.Email)</label>
		}
		else
		{
			<label>Bought Workouts: @await AdminService.TotalWorkoutsByUserIdAsync(Model.Id)</label>
		}
	</td>
	<td><label>Created Posts: @Model.PostCount</label></td>
	<td>
		@if (OnlineUsersMiddleware.CheckIfUserIsOnline(Model.Id))
		{
			<label>✔</label>
		}
		else
		{
			<label class="text-center">❌</label>
		}
	</td>
</tr>