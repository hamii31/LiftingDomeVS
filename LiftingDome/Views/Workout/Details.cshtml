@using LiftingDome.Infrastructure.Extensions;
@using LiftingDome.Services.Data.Interfaces;
@model WorkoutDetailsViewModel

@inject ICoachService CoachService
@{
	bool isUserCoach = await CoachService.CoachExistsByUserIdAsync(this.User.GetId()!);
	bool CoachIsOwnerOfWorkout = await CoachService.HasWorkoutWithIdAsync(this.User.GetId()!, Model.Id);
	bool UserIsOwnerOfWorkout = await CoachService.UserHasWorkoutsWithId(this.User.GetId()!, Model.Id);
}
@{
	ViewBag.Title = "Workout Details";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<div class="container" style="display:inline">
	<div class="row">
		<div class="col-4">
			<img class="card-img-top" style="width: 20rem;"
				 src="@Model.ImageUrl" alt="Workout Image">
		</div>
		<div class="card col-8 border-0">
			<p style="font-size:25px;"><u>@Model.Title</u></p>
			<p>
				Price:
				<b>@($"{Model.Price:f2}") BGN</b>
			</p>
			<p>@Model.Description</p>
			<p>Category: <b>@Model.Category</b></p>
			<div class="form-inline">
				@if (this.User.Identity?.IsAuthenticated ?? false)
				{
					@if (CoachIsOwnerOfWorkout)
					{
						<a class="btn btn-dark" asp-controller="Workout" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>

						<a class="ml-2 btn btn-danger" asp-controller="Workout" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
					}
					@if (!isUserCoach)
					{
						@if (!UserIsOwnerOfWorkout)
						{
							<form class="ml-2" asp-controller="Workout" asp-action="Get" asp-route-id="@Model.Id" method="post">
								<input class="btn btn-dark" type="submit" value="Get" />
							</form>
						}
					}

					
				}
			</div>
			<p></p>
			<div class="card" style="width: 18rem;">
				<div class="card-body">
					<h5 class="card-title">Coach Info</h5>
					<p class="card-text">Email: @Model.Coach.Email</p>
					<p class="card-text">Phone Number: @Model.Coach.PhoneNumber</p>
				</div>
			</div>
		</div>
	</div>
</div>