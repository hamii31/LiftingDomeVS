@using LiftingDome.Infrastructure.Extensions;
@using LiftingDome.Models;
@using LiftingDome.Services.Data.Interfaces;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@inject ICoachService CoachService
@{
    bool isUserCoach = await CoachService.CoachExistsByUserIdAsync(this.User.GetId()!);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
     <li class="nav-item">
            <a class="nav-link text-white" style="margin-top:25px" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><b>Hello, @User.Identity?.Name.Remove(User.Identity.Name.IndexOf("@"))!</b></a>
     </li>
    @if (!isUserCoach)
    {
         <li class="nav-item">
                <a class="nav-link text-white" style="margin-top:25px" asp-area="" asp-controller="Coach" asp-action="Become"><b>Become Coach</b></a>
        </li>
    }
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" style="margin-top:25px" class="nav-link btn btn-link text-white"><b>Logout</b></button>
        </form>
    </li>
}
else
{
     <li class="nav-item">
            <a class="nav-link text-white" style="margin-top:25px" asp-area="Identity" asp-page="/Account/Register"><b>Register</b></a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-white" style="margin-top:25px" asp-area="Identity" asp-page="/Account/Login"><b>Login</b></a>
    </li>
}
</ul>
<style>
    .nav-item :hover{
        background-color:black;
        color:white
    }
</style>